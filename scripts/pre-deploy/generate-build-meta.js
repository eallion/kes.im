const fs = require('fs');
const path = require('path');
const {execSync} = require('child_process');

// Resolve paths.
const rootPath = path.resolve(__dirname, '../..');
const outputRelativePath = 'src/gen/build.ts';
const outputPath = path.resolve(rootPath, outputRelativePath);

// Get package.json.
const packageJson = require(path.resolve(rootPath, 'package.json'));

// Generate
try {
  // Collect build meta.
  const time = new Date().toISOString();
  const commitHash = execSync('git rev-parse HEAD').toString().trim();
  const build = execSync('git rev-list --count HEAD').toString().trim();
  const workerEnv = process.env.WORKER_ENV;
  const version = packageJson.version;
  const run = process.env.RUN;

  const buildMeta = {
    time,
    commitHash,
    workerEnv,
    version,
    build,
  };

  // Write build meta to file.
  const content = `
    \n// This file is auto-generated by scripts/deploy-prepare/generate-build-meta.js
    \nexport default ${JSON.stringify(buildMeta, null, 2)};\n\n
  `;

  fs.writeFileSync(outputPath, content);

  console.log(`[SUCCESS] build.ts file is generated and saved to ${outputRelativePath}.`);
} catch (error) {
  console.error('[ERROR] Error during generate-build-meta:', error);
}
